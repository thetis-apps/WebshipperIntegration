AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Application for integrating Thetis IMS with Webshipper.
Metadata:
  AWS::ServerlessRepo::Application:
    Name: WebshipperIntegration
    Description: Application for integration of Thetis IMS with Webshipper
    Author: thetis-apps
    SpdxLicenseId: Apache-2.0
    LicenseUrl: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/3bdc425722d4b0984d4c794a2eddb85d
    ReadmeUrl: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/00836fc16295752418b74ddfd93490c9
    Labels:
    - thetis-ims
    HomePageUrl: https://github.com/thetis-apps/WebshipperIntegration
    SemanticVersion: '0.0.1'
    SourceCodeUrl: https://github.com/thetis-apps/WebshipperIntegration
Globals:
  Function:
    Runtime: nodejs12.x
    MemorySize: 512
Parameters:
  ContextId:
    Type: String
    Description: Context that this application is handling events for.
    MinLength: '1'
  ClientId:
    Type: AWS::SSM::Parameter::Value<String>
  ClientSecret:
    Type: AWS::SSM::Parameter::Value<String>
  ApiKey:
    Type: String
Resources:
  OrderWebhook:
    Type: AWS::Serverless::Function
    Properties:
      Description: Function to push order from Webshipper to a shipment in Thetis
        IMS.
      Handler: src/handlers/handler.handleWebhook
      Timeout: 30
      Policies:
      - AmazonSQSFullAccess
      Environment:
        Variables:
          OrderQueue:
            Ref: OrderQueue
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        Invocation:
          Type: Api
          Properties:
            Method: POST
            Path: /{contextId}/orders
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/08f495d66c7a03812bfbc78a8570f4a1
  OrderQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - OrderDeadLetterQueue
          - Arn
        maxReceiveCount: 3
      VisibilityTimeout: 60
  OrderHandler:
    Type: AWS::Serverless::Function
    Properties:
      Description: Function to push order from Webshipper to a shipment in Thetis
        IMS.
      Handler: src/handlers/handler.handleOrder
      Timeout: 30
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        OrderPush:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - OrderQueue
              - Arn
            BatchSize: 1
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/08f495d66c7a03812bfbc78a8570f4a1
  Consignor:
    Type: AWS::Serverless::Function
    Properties:
      Description: Function to create shipment in Webshipper from shipment in Thetis
        IMS.
      Handler: src/handlers/handler.handleShippingLabelRequest
      Timeout: 600
      Environment:
        Variables:
          ClientId:
            Ref: ClientId
          ClientSecret:
            Ref: ClientSecret
          ApiKey:
            Ref: ApiKey
      Events:
        ShippingLabelRequest:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
              - public.thetis-ims.com
              detail-type:
              - shippingLabelRequest
              detail:
                termsOfDelivery:
                - Webshipper
                contextId:
                - Ref: ContextId
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt:
          - ConsignorDeadLetterQueue
          - Arn
      CodeUri: s3://aws-sam-cli-managed-default-samclisourcebucket-1q52gionhjeg3/08f495d66c7a03812bfbc78a8570f4a1
  ConsignorDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties: {}
  OrderDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      VisibilityTimeout: 60
  ConsignorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm when consignment fails.
      AlarmActions:
      - Ref: IncidentTopic
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Period: 60
      Namespace: AWS/SQS
      Threshold: '0'
      Unit: Count
      Dimensions:
      - Name: QueueName
        Value:
          Fn::GetAtt:
          - ConsignorDeadLetterQueue
          - QueueName
      TreatMissingData: notBreaching
      Statistic: Maximum
  OrderAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm when handling of order fails.
      AlarmActions:
      - Ref: IncidentTopic
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Period: 60
      Namespace: AWS/SQS
      Threshold: '0'
      Unit: Count
      Dimensions:
      - Name: QueueName
        Value:
          Fn::GetAtt:
          - OrderDeadLetterQueue
          - QueueName
      TreatMissingData: notBreaching
      Statistic: Maximum
  IncidentTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: lmp@thetis-apps.com
        Protocol: email
      DisplayName: Incidents to be handled by Thetis Devops.
